syntax = "proto3";

package lifelog;
import "lifelog_types.proto";

service ServerService {
    rpc RegisterCollector(CollectorRegistrationRequest) returns (CollectorRegistrationResponse);
    rpc GetConfig() returns (Config);
    rpc SetConfig(Config) returns (ConfigAck);
    rpc GetData(Query) returns (LifelogData);
}

service CollectorService {
    rpc GetState(CollectorStateRequest) returns (CollectorStateResponse);
    rpc UpdateConfig(CollectorConfig) returns (ConfigAck);
    rpc QueryDataFromCollector(CollectorQuery) returns (LifelogData);
    rpc Handshake (HandshakeRequest) returns (HandshakeResponse);
    rpc ReportStatus (ReportStatusRequest) returns (ReportStatusResponse);
  };


message HandshakeResponse {
  bool success = 1;
  string message = 2;
  string session_id = 3;
}

message ReportStatusRequest {
  string client_id = 1;
  repeated string active_loggers = 2;
}

message ReportStatusResponse {
  bool acknowledged = 1;
}

message CollectorStatusRequest {
}

message CollectorQuery {
  string id = 1;
  string query = 2;
}

message ConfigAck {
  bool success = 1;
}

message CollectorStateResponse {
  CollectorState state = 1;
}

message CollectorConfig {
    string config =1;
}

message CollectorRegistrationRequest {
  Config config = 1;
}

message CollectorRegistrationResponse {
    bool success = 1;
}

