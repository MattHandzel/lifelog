syntax = "proto3";

package lifelog;

import "google/protobuf/timestamp.proto";
import "lifelog_types.proto";  // defines Config, LifelogData, etc.

// -----------------------------------------------------------------------------
// Common RPC request/response messages
// -----------------------------------------------------------------------------

message RegisterCollectorRequest {
  Config config = 1;
}
message RegisterCollectorResponse {
  bool success = 1;
  uint64 session_id = 2;
}

message GetConfigRequest {}
message GetConfigResponse {
  Config config = 1;
}

message SetConfigRequest {
  Config config = 1;
}
message SetConfigResponse {
  bool success = 1;
}

message GetDataRequest {
  string query = 1;
}
message GetDataResponse {
  LifelogData data = 1;
}

message GetStateRequest {}
message GetStateResponse {
  CollectorState state = 1;
}

// -----------------------------------------------------------------------------
// report current collector state back to server
// -----------------------------------------------------------------------------

message ReportStateRequest {
  CollectorState state = 1;
}
message ReportStateResponse {
  bool acknowledged = 1;
}

// -----------------------------------------------------------------------------
// Domain types
// -----------------------------------------------------------------------------

message CollectorState {
  string name = 1;
  google.protobuf.Timestamp timestamp = 2;
}

// -----------------------------------------------------------------------------
// Services
// -----------------------------------------------------------------------------

service LifelogServerService {
  rpc RegisterCollector(RegisterCollectorRequest) returns (RegisterCollectorResponse);
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse);
  rpc SetConfig(SetConfigRequest) returns (SetConfigResponse);
  rpc GetData(GetDataRequest) returns (GetDataResponse);
  rpc ReportState(ReportStateRequest) returns (ReportStateResponse);
}

service CollectorService {
  rpc GetState(GetStateRequest) returns (GetStateResponse);
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse);
  rpc SetConfig(SetConfigRequest) returns (SetConfigResponse);
  rpc GetData(GetDataRequest) returns (GetDataResponse);
}
